// server - sample http server that serves protected and unprotected enpoints
// that can be accessed by using the JWT Token generated by tokengen
package main

import (
	"flag"
	"fmt"
	server "github.com/enpointe/go-server"
	"github.com/julienschmidt/httprouter"
	"log"
	"net/http"
	"strings"
)

// Index displays the OPEN API generated page
func Index(w http.ResponseWriter, r *http.Request, _ httprouter.Params) {
	http.ServeFile(w, r, "index.html")
}

func main() {
	port := flag.String("port", ":8080", "HTTP localhost service port to use")
	configFile := flag.String("config", server.ConfigFilename, "The configuration file")
	flag.Parse()
	if !strings.HasPrefix(*port, ":") {
		log.Fatal("port flag specified port must being with ':'")
	}
	log.Printf("Using configuration file %s", *configFile)

	config, err := server.ReadConfig(*configFile)
	if err != nil {
		err := fmt.Errorf("JWT Authentication Key not available, %s", err.Error())
		log.Fatal(err)
	}
	h, err := server.NewServer(config)
	if err != nil {
		log.Fatal(err)
	}
	h.Router.GET("/", Index)

	log.Printf("Server started on localhost%s\n", *port)
	log.Fatal(http.ListenAndServe(*port, h))
}
